"use strict";(self.webpackChunkall_in_one_blockchain=self.webpackChunkall_in_one_blockchain||[]).push([[625],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),d=r,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return t?a.createElement(k,o(o({ref:n},u),{},{components:t})):a.createElement(k,o({ref:n},u))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9382:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>T,contentTitle:()=>S,default:()=>R,frontMatter:()=>C,metadata:()=>A,toc:()=>x});var a=t(7462),r=t(7294),l=t(3905),o=t(6010),i=t(2466),s=t(6550),c=t(1980),u=t(7392),p=t(12);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??m(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function k(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function _(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,l=d(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!k({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[s,c]=_({queryString:t,groupId:a}),[u,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,l]=(0,p.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:a}),g=(()=>{const e=s??u;return k({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!k({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),m(e)}),[c,m,l]),tabValues:l}}var h=t(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),m=e=>{const n=e.currentTarget,t=u.indexOf(n),a=c[t].value;a!==l&&(p(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>u.push(e),onKeyDown:d,onClick:m},i,{className:(0,o.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":l===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function v(e){const n=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(b,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function N(e){const n=(0,h.Z)();return r.createElement(v,(0,a.Z)({key:String(n)},e))}const w={tabItem:"tabItem_Ymn6"};function P(e){let{children:n,hidden:t,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(w.tabItem,a),hidden:t},n)}const C={title:"\u57fa\u7840\u901f\u67e5\u8868",sidebar_position:3},S="Solana \u57fa\u7840\u901f\u67e5\u8868",A={unversionedId:"advance-develop/solana-basic-cheat-sheet/basic-cheat-sheet",id:"advance-develop/solana-basic-cheat-sheet/basic-cheat-sheet",title:"\u57fa\u7840\u901f\u67e5\u8868",description:"\u8d26\u6237",source:"@site/docs/solana/advance-develop/solana-basic-cheat-sheet/basic-cheat-sheet.mdx",sourceDirName:"advance-develop/solana-basic-cheat-sheet",slug:"/advance-develop/solana-basic-cheat-sheet/basic-cheat-sheet",permalink:"/solana/advance-develop/solana-basic-cheat-sheet/basic-cheat-sheet",draft:!1,editUrl:"https://github.com/All-In-One-Blockchain/all-in-one-solana/edit/main/docs/solana/advance-develop/solana-basic-cheat-sheet/basic-cheat-sheet.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\u57fa\u7840\u901f\u67e5\u8868",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Solana \u57fa\u7840\u901f\u67e5\u8868",permalink:"/solana/advance-develop/solana-basic-cheat-sheet/"}},T={},x=[{value:"\u8d26\u6237",id:"\u8d26\u6237",level:2},{value:"\ud83e\udd13 \u5b9a\u4e49",id:"-\u5b9a\u4e49",level:3},{value:"\ud83d\udccd\u91cd\u70b9",id:"\u91cd\u70b9",level:3},{value:"\u8d26\u6237\u7c7b\u578b",id:"\u8d26\u6237\u7c7b\u578b",level:3},{value:"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740\uff08PDAs\uff09",id:"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740pdas",level:3},{value:"\u5173\u8054\u4ee3\u5e01\u8d26\u6237\uff08ATAs\uff09",id:"\u5173\u8054\u4ee3\u5e01\u8d26\u6237atas",level:3},{value:"\u79df\u8d41",id:"\u79df\u8d41",level:3},{value:"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8d26\u6237",id:"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8d26\u6237",level:3},{value:"\u5982\u4f55\u5728Seed\u4e0a\u521b\u5efa\u4e00\u4e2a\u8d26\u6237 \ud83e\udd14",id:"\u5982\u4f55\u5728seed\u4e0a\u521b\u5efa\u4e00\u4e2a\u8d26\u6237-",level:3},{value:"\u5982\u4f55\u5173\u95ed\u8d26\u6237 \ud83e\udd14",id:"\u5982\u4f55\u5173\u95ed\u8d26\u6237-",level:3},{value:"\u94fe\u4e0a\u8d26\u6237\u6570\u636e",id:"\u94fe\u4e0a\u8d26\u6237\u6570\u636e",level:3},{value:"\u7b7e\u7f72\u4eba\u548c\u6240\u6709\u8005",id:"\u7b7e\u7f72\u4eba\u548c\u6240\u6709\u8005",level:2},{value:"\u7b7e\u7f72\u8005",id:"\u7b7e\u7f72\u8005",level:3},{value:"\u6240\u6709\u6743\u548c\u7a0b\u5e8f\u7684\u8f6c\u8ba9",id:"\u6240\u6709\u6743\u548c\u7a0b\u5e8f\u7684\u8f6c\u8ba9",level:3},{value:"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740\uff08PDAs\uff09",id:"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740pdas-1",level:2},{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:3},{value:"\u5173\u952e\u8981\u70b9",id:"\u5173\u952e\u8981\u70b9",level:3},{value:"\u826f\u597d\u7684\u5b9e\u8df5",id:"\u826f\u597d\u7684\u5b9e\u8df5",level:3},{value:"\u5982\u4f55\u521b\u5efaPDA\u8d26\u6237",id:"\u5982\u4f55\u521b\u5efapda\u8d26\u6237",level:3},{value:"\u7a0b\u5e8f",id:"\u7a0b\u5e8f",level:2},{value:"\ud83e\udd13 \u5b9a\u4e49",id:"-\u5b9a\u4e49-1",level:3},{value:"\ud83d\udccd\u91cd\u70b9",id:"\u91cd\u70b9-1",level:3},{value:"\u7a0b\u5e8f\u7c7b\u578b",id:"\u7a0b\u5e8f\u7c7b\u578b",level:3},{value:"\u672c\u5730\u7a0b\u5e8f",id:"\u672c\u5730\u7a0b\u5e8f",level:3},{value:"\u94fe\u4e0a\u7a0b\u5e8f",id:"\u94fe\u4e0a\u7a0b\u5e8f",level:3},{value:"\u53ef\u6267\u884c\u7684",id:"\u53ef\u6267\u884c\u7684",level:3},{value:"\u53ef\u5347\u7ea7\u7684",id:"\u53ef\u5347\u7ea7\u7684",level:3},{value:"\u7f16\u5199\u7a0b\u5e8f",id:"\u7f16\u5199\u7a0b\u5e8f",level:3},{value:"\u8de8\u7a0b\u5e8f\u8c03\u7528\uff08CPIs\uff09",id:"\u8de8\u7a0b\u5e8f\u8c03\u7528cpis",level:2},{value:"\ud83e\udd13 \u5b9a\u4e49",id:"-\u5b9a\u4e49-2",level:3},{value:"\ud83d\udccd\u91cd\u70b9",id:"\u91cd\u70b9-2",level:3},{value:"\u5982\u4f55\u5236\u4f5cCPI",id:"\u5982\u4f55\u5236\u4f5ccpi",level:3},{value:"\ud83e\uddd0 \u9700\u8981\u7279\u6743\u7684\u6307\u4ee4",id:"-\u9700\u8981\u7279\u6743\u7684\u6307\u4ee4",level:3},{value:"\u53ef\u91cd\u5165\u6027",id:"\u53ef\u91cd\u5165\u6027",level:3},{value:"\ud83d\udd17 \u6709\u7528\u7684\u94fe\u63a5",id:"-\u6709\u7528\u7684\u94fe\u63a5",level:2}],I={toc:x},D="wrapper";function R(e){let{components:n,...r}=e;return(0,l.kt)(D,(0,a.Z)({},I,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"solana-\u57fa\u7840\u901f\u67e5\u8868"},"Solana \u57fa\u7840\u901f\u67e5\u8868"),(0,l.kt)("h2",{id:"\u8d26\u6237"},"\u8d26\u6237"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(7913).Z,width:"1200",height:"740"})),(0,l.kt)("h3",{id:"-\u5b9a\u4e49"},"\ud83e\udd13 \u5b9a\u4e49"),(0,l.kt)("p",null,"\u8d26\u6237\u662f\u5b58\u50a8\u5728Solana\u533a\u5757\u94fe\u4e0a\u7684\u6570\u636e\u3002"),(0,l.kt)("h3",{id:"\u91cd\u70b9"},"\ud83d\udccd\u91cd\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8d26\u6237\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u8d26\u6237\u90fd\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u5730\u5740\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u8d26\u6237\u7684\u6700\u5927\u5927\u5c0f\u4e3a10MB\uff0810\u5146\u5b57\u8282\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u8d26\u6237\u5927\u5c0f\u5728\u521b\u5efa\u65f6\u56fa\u5b9a\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"realloc"),"\u8fdb\u884c\u8c03\u6574\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u79df\u91d1\u652f\u4ed8\u8d26\u6237\u6570\u636e\u5b58\u50a8\u8d39\u7528\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7cfb\u7edf\u7a0b\u5e8f\u9ed8\u8ba4\u62e5\u6709\u8be5\u8d26\u6237\u3002")),(0,l.kt)("h3",{id:"\u8d26\u6237\u7c7b\u578b"},"\u8d26\u6237\u7c7b\u578b"),(0,l.kt)("p",null,"Solana\u533a\u5757\u94fe\u4e0a\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8d26\u6237\uff1a\u53ef\u6267\u884c\u8d26\u6237\u548c\u975e\u53ef\u6267\u884c\u8d26\u6237\u3002\u7a0b\u5e8f\u662f\u53ef\u6267\u884c\u8d26\u6237\uff0c\u5b58\u50a8\u7740\u7a0b\u5e8f\u7684\u4e0d\u53ef\u53d8\u4ee3\u7801\u3002\u7a0b\u5e8f\u7684\u4ee3\u7801\u9996\u5148\u7528Rust\u6216C/C++\u7f16\u5199\uff0c\u7136\u540e\u901a\u8fc7",(0,l.kt)("a",{parentName:"p",href:"https://llvm.org/"},"LLVM\u7f16\u8bd1\u5668"),"\u57fa\u7840\u8bbe\u65bd\u7f16\u8bd1\u6210\u5b57\u8282\u7801\u3002"),(0,l.kt)("p",null,"\u6570\u636e\u5b58\u50a8\u548c\u4ee3\u5e01\u4f59\u989d\u5b58\u50a8\u5728\u975e\u53ef\u6267\u884c\u8d26\u6237\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6570\u636e\u53ef\u4ee5\u88ab\u66f4\u6539\u3002\u4e3a\u4e86\u63a7\u5236\u8c01\u53ef\u4ee5\u66f4\u6539\u8fd9\u4e9b\u6570\u636e\uff0c\u975e\u53ef\u6267\u884c\u8d26\u6237\u88ab\u5206\u914d\u4e86\u4e00\u4e2a\u6240\u6709\u8005\u7a0b\u5e8f\u5730\u5740\u3002\u5176\u4ed6\u7a0b\u5e8f\u53ef\u4ee5\u8bfb\u53d6\u53e6\u4e00\u4e2a\u8d26\u6237\u7684\u6570\u636e\uff0c\u4f46\u5982\u679c\u5b83\u4eec\u8bd5\u56fe\u4fee\u6539\u8be5\u6570\u636e\uff0c\u4ea4\u6613\u5c06\u5931\u8d25\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(5878).Z,width:"1200",height:"500"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u8d26\u6237 - \u8fd9\u4e9b\u8d26\u6237\u5b58\u50a8\u53ef\u6267\u884c\u4ee3\u7801\u548c\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7684\u7b49\u4ef7\u7269\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5b58\u50a8\u8d26\u6237 - \u8fd9\u4e9b\u8d26\u6237\u5b58\u50a8\u4e0e\u7a0b\u5e8f\u76f8\u5173\u7684\u6570\u636e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4ee4\u724c\u8d26\u6237 - \u8fd9\u4e9b\u8d26\u6237\u8ddf\u8e2a\u4ee4\u724c\u7684\u8d26\u6237\u4f59\u989d\uff0c\u5e76\u5141\u8bb8\u5728\u8d26\u6237\u4e4b\u95f4\u8fdb\u884c\u4ee4\u724c\u7684\u8f6c\u79fb\u6216\u63a5\u6536\u3002")),(0,l.kt)("h3",{id:"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740pdas"},"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740\uff08PDAs\uff09"),(0,l.kt)("p",null,"\u8fd8\u6709\u4e00\u79cd\u989d\u5916\u7684\u7a0b\u5e8f\u62e5\u6709\u8d26\u6237\u2014\u2014\u7a0b\u5e8f\u6d3e\u751f\u8d26\u6237\uff0c\u7528\u4e8e\u5b58\u50a8\u7279\u5b9a\u7a0b\u5e8f\u7684\u6570\u636e\u3002\u5b83\u4eec\u9075\u5faa\u975e\u53ef\u6267\u884c\u8d26\u6237\u7684\u89c4\u5219\uff0c\u56e0\u6b64\u5b83\u4eec\u6709\u6240\u6709\u8005\uff0c\u4f46\u6ca1\u6709\u76f8\u5e94\u7684\u5bc6\u94a5\u5bf9\uff0c\u53ea\u6709\u521b\u5efaPDA\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"program_id"),"\u624d\u80fd\u7b7e\u7f72\u4ea4\u6613\u4ee5\u4fee\u6539\u5176\u6570\u636e\u3002\u5f53\u60a8\u9700\u8981\u53ea\u80fd\u7531\u60a8\u7684\u7a0b\u5e8f\u4fee\u6539\u7684\u5b58\u50a8\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u7528\u3002"),(0,l.kt)("h3",{id:"\u5173\u8054\u4ee3\u5e01\u8d26\u6237atas"},"\u5173\u8054\u4ee3\u5e01\u8d26\u6237\uff08ATAs\uff09"),(0,l.kt)("p",null,"\u5728Solana\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a",(0,l.kt)("a",{parentName:"p",href:"https://spl.solana.com/token"},"Token\u7a0b\u5e8f"),"\uff0c\u5b83\u5904\u7406\u521b\u5efa\u65b0\u7684\u4ee4\u724c\uff0c\u8fd9\u4e9b\u4ee4\u724c\u4e0e\u8bb8\u591a\u5176\u4ed6\u94fe\u4e0d\u540c\uff0c\u4e0d\u662f\u53ef\u6267\u884c\u7684\uff0c\u53ea\u662f\u5b58\u50a8\u4e0e\u4ee4\u724c\u5143\u6570\u636e\u3002\u56e0\u6b64\uff0cPDA\u7684\u4e00\u4e2a\u6700\u91cd\u8981\u7684\u4f8b\u5b50\u662f\u6240\u8c13\u7684",(0,l.kt)("a",{parentName:"p",href:"https://spl.solana.com/associated-token-account"},"\u5173\u8054\u4ee4\u724c\u8d26\u6237ATA"),"\u3002\u8fd9\u4e9b\u8d26\u6237\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u5bf9\u5177\u4f53SPL\u4ee4\u724c\uff08\u4ee4\u724c\u94f8\u9020\uff09\u7684\u4f59\u989d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7ed9\u5b9a\u94b1\u5305\u5730\u5740\u7684ATA\u53ea\u662f\u4e00\u4e2a\u7531\u94b1\u5305\u5730\u5740\u672c\u8eab\u548c\u4ee4\u724c\u94f8\u9020\u7ec4\u6210\u7684\u7a0b\u5e8f\u6d3e\u751f\u8d26\u6237\u3002"),(0,l.kt)("h3",{id:"\u79df\u8d41"},"\u79df\u8d41"),(0,l.kt)("p",null,"\u4e0d\u5e78\u7684\u662f\uff0c\u5c06\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u5b58\u50a8\u5230\u5355\u72ec\u7684\u8d26\u6237\u4e2d\u662f\u9700\u8981\u4ed8\u8d39\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u8fd9\u4e9b\u8d39\u7528\u88ab\u79f0\u4e3a\u79df\u91d1\uff0c\u4ee5Lamports\u7684\u5f62\u5f0f\u652f\u4ed8\u3002"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Solana\u4e0a\u7684\u8d26\u6237\u53ef\u80fd\u5177\u6709\u7531\u6240\u6709\u8005\u63a7\u5236\u7684\u72b6\u6001\uff08Account::data\uff09\uff0c\u4e0e\u8d26\u6237\u4f59\u989d\uff08Account::lamports\uff09\u5206\u5f00\u3002\u7531\u4e8e\u7f51\u7edc\u4e0a\u7684\u9a8c\u8bc1\u8005\u9700\u8981\u5728\u5185\u5b58\u4e2d\u7ef4\u62a4\u6b64\u72b6\u6001\u7684\u5de5\u4f5c\u526f\u672c\uff0c\u56e0\u6b64\u7f51\u7edc\u5bf9\u6b64\u8d44\u6e90\u6d88\u8017\u6536\u53d6\u57fa\u4e8e\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u8d39\u7528\uff0c\u4e5f\u79f0\u4e3a\u79df\u91d1\u3002"),(0,l.kt)("p",{parentName:"admonition"},"\u53d1\u73b0\u66f4\u591a\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/implemented-proposals/rent"},"Solana\u6587\u6863/\u5df2\u5b9e\u65bd\u7684\u63d0\u6848/\u79df\u91d1"))),(0,l.kt)("p",null,"Lamports\u662fSolana\u7684\u4ee3\u5e01\uff08SOL\uff09\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5728Solana\u533a\u5757\u94fe\u4e0a\u8fdb\u884c\u5fae\u652f\u4ed8\u3002\u5b58\u50a8\u5728\u8d26\u6237\u4e2d\u7684\u6570\u636e\u91cf\u51b3\u5b9a\u4e86\u79df\u91d1\u8d39\u7528\u3002\u5b58\u50a8\u7684\u6570\u636e\u91cf\u8d8a\u5927\uff0c\u79df\u91d1\u8d39\u7528\u8d8a\u9ad8\u3002"),(0,l.kt)("p",null,"\u79df\u91d1\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u65f6\u95f4\u652f\u4ed8\uff1a\u5f53\u4ea4\u6613\u5f15\u7528\u65f6\u6216\u8005\u4e00\u4e2a\u65f6\u671f\u7ed3\u675f\u65f6\u652f\u4ed8\u3002"),(0,l.kt)("p",null,"\u79df\u91d1\u8d39\u7528\u5728Solana\u533a\u5757\u94fe\u7684\u6bcf\u4e2a\u65f6\u671f\u7ed3\u675f\u65f6\u6536\u53d6\u3002\u4e00\u4e2a\u65f6\u671f\u662f\u6307\u9886\u5148\u7684\u9a8c\u8bc1\u8005\u4ecd\u7136\u6709\u6548\u5730\u751f\u6210\u4ea4\u6613\u5757\u7684\u65f6\u95f4\u3002\u60a8\u53ef\u4ee5\u5728",(0,l.kt)("a",{parentName:"p",href:"https://explorer.solana.com/"},"Solana Explorer"),"\u4e0a\u67e5\u770b\u5f53\u524d\u548c\u8fc7\u53bb\u7684\u65f6\u671f\u6570\u636e\u3002"),(0,l.kt)("p",null,"\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u4e00\u4e2a\u65f6\u4ee3\u5927\u7ea6\u6301\u7eed\u4e24\u5929\u3002\u5982\u679c\u8d26\u6237\u4f59\u989d\u4e3a\u96f6\u4e14\u65e0\u6cd5\u652f\u4ed8\u79df\u91d1\uff0c\u533a\u5757\u94fe\u5c06\u5220\u9664\u8be5\u8d26\u6237\u3002"),(0,l.kt)("p",null,"\u4e00\u4e2a\u8d26\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u5176\u4ee3\u5e01\u4f59\u989d\u4e2d\u6301\u6709\u81f3\u5c11\u4e24\u5e74\u7684\u79df\u91d1\u6765\u514d\u9664\u79df\u91d1\u3002\u4f30\u7b97\u79df\u91d1\u6210\u672c\u7684\u7b80\u4fbf\u65b9\u6cd5\u662f\u4f7f\u7528Solana CLI\u4e2d\u7684",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/cli/usage#solana-rent"},"solana rent\u547d\u4ee4"),"\u3002\u901a\u8fc7\u63d0\u4f9b\u8d26\u6237\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\uff0c\u60a8\u5c06\u770b\u5230\u6bcf\u5b57\u8282\u7684\u79df\u91d1\u3001\u6bcf\u4e2a\u65f6\u671f\u7684\u79df\u91d1\u4ee5\u53ca\u8d26\u6237\u514d\u79df\u6240\u9700\u7684\u6700\u4f4e\u91d1\u989d\u3002"),(0,l.kt)("p",null,"\u901a\u8fc7\u5173\u95ed\u8d26\u6237\u5e76\u5c06Lamports\u53d1\u9001\u56de\u94b1\u5305\uff0c\u53ef\u4ee5\u53d6\u56de\u79df\u91d1\u3002"),(0,l.kt)("h3",{id:"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8d26\u6237"},"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8d26\u6237"),(0,l.kt)("p",null,"\u8981\u5728Solana\u4e0a\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\uff0c\u5ba2\u6237\u7aef\u5fc5\u987b\u751f\u6210\u4e00\u4e2a\u5bc6\u94a5\u5bf9\uff08\u516c\u94a5\u548c\u79c1\u94a5\uff09\u3002\u7136\u540e\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"SystemProgram::CreateAccount"),"\u8c03\u7528\u6765\u6ce8\u518c\u516c\u94a5\uff0c\u5e76\u5206\u914d\u6240\u9700\u7684\u6570\u636e\u5b58\u50a8\u5927\u5c0f\u4ee5\u8bbe\u7f6e\u8be5\u8d26\u6237\u3002\u76ee\u524d\uff0c\u8fd9\u4e2a\u5927\u5c0f\u4e0d\u80fd\u5728\u540e\u671f\u66f4\u6539\uff0c\u4e14\u5927\u5c0f\u9650\u5236\u4e3a10 MB\u3002\u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u5927\u5c0f\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u5bb9\u91cf\u66f4\u5927\u7684\u8d26\u6237\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u8d26\u6237\u3002"),(0,l.kt)("p",null,"\u521b\u5efa\u8d26\u6237\u65f6\uff0c\u9700\u8981\u4e3a\u8d26\u6237\u5206\u914d\u4e00\u4e2a\u6240\u6709\u8005\u3002\u53ea\u6709\u8d26\u6237\u7684\u6240\u6709\u8005\u624d\u80fd\u4fee\u6539\u5b58\u50a8\u5728\u8d26\u6237\u4e2d\u7684\u6570\u636e\u3002\u8d26\u6237\u521b\u5efa\u540e\u7684\u9ed8\u8ba4\u6240\u6709\u8005\u88ab\u79f0\u4e3a\u201c\u7cfb\u7edf\u7a0b\u5e8f\u201d\u3002\u7cfb\u7edf\u7a0b\u5e8f\u662f\u4e00\u4e2a\u672c\u5730\u7684Solana\u7a0b\u5e8f\uff0c\u8d1f\u8d23\u521b\u5efa\u8d26\u6237\u3001\u5206\u914d\u8d26\u6237\u4e0a\u7684\u6570\u636e\uff0c\u5e76\u5c06\u8d26\u6237\u7684\u6240\u6709\u6743\u5206\u914d\u7ed9\u8fde\u63a5\u7684\u7a0b\u5e8f\u3002\u672c\u5730\u7a0b\u5e8f\u662f\u6240\u6709Solana\u9a8c\u8bc1\u8005\u5fc5\u987b\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002"),(0,l.kt)("p",null,"\u7cfb\u7edf\u7a0b\u5e8f\u8fd8\u8d1f\u8d23\u5904\u7406\u5176\u6240\u5206\u914d\u7ed9\u6240\u6709\u8005\u7684Lamport\u8f6c\u8d26\u3002\u5982\u679c\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u4ee3\u5e01\u4f59\u989d\u7684\u8d26\u6237\uff0c\u7cfb\u7edf\u7a0b\u5e8f\u5c06\u5904\u7406\u8be5\u4ee3\u5e01\u7684\u8f6c\u8d26\u3002\u7528\u6237\u5c06\u4f7f\u7528\u79c1\u94a5\u7b7e\u7f72\u8f6c\u8d26\u6307\u4ee4\uff0c\u7cfb\u7edf\u7a0b\u5e8f\u5c06\u5904\u7406\u4ece\u53d1\u9001\u65b9\u6263\u9664\u4ee3\u5e01\u5e76\u5c06\u5176\u5b58\u5165\u63a5\u6536\u65b9\u8d26\u6237\u3002"),(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(P,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use solana_client::rpc_client::RpcClient;\nuse solana_program::system_instruction;\nuse solana_sdk::commitment_config::CommitmentConfig;\nuse solana_sdk::native_token::LAMPORTS_PER_SOL;\nuse solana_sdk::signature::{Keypair, Signer};\n\nfn main() {\n    // Create an HTTP RpcClient with specified "confirmed" commitment level\n    // "confirmed" - the node will query the most recent block that has been voted on by supermajority of the cluster.\n    let rpc_url = String::from("https://api.devnet.solana.com");\n    let rpc_client = RpcClient::new_with_commitment(rpc_url, CommitmentConfig::confirmed()));\n\n    // Generate fee payer and new account key pairs\n    let fee_payer = Keypair::new();\n    let new_account = Keypair::new();\n\n    // Request an airdrop for the fee payer and wait for the transaction to be confirmed\n    let request_airdrop_tx_signature = rpc_client\n        .request_airdrop(&fee_payer.pubkey(), LAMPORTS_PER_SOL)\n        .unwrap();\n    loop {\n        if let ok(confirmed) = rpc_client.confirm_transaction(&request_airdrop_tx_signature) {\n            if confirmed {\n                break;\n            }\n        }\n    }\n\n    // Specify account data length\n    let space = 0;\n    // Get minimum balance required to make an account with specified data length rent exempt\n    let rent_exemption_amount = rpc_client\n        .get_minimum_balance_for_rent_exemption(space)\n        .unwrap();\n    // Create instruction to create an account\n    let create_account_ix = system_instruction::create_account(\n        &fee_payer.pubkey(),\n        &new_account.pubkey(),\n        rent_exemption_amount,\n        space as u64,\n        &fee_payer.pubkey(),\n    );\n\n    // Get recent blockhash\n    let recent_blockhash = rpc_client.get_latest_blockhash().unwrap();\n    // Create transaction to create an account\n    let create_account_tx = solana_sdk::transaction::Transaction::new_signed_with_payer(\n        &[create_account_ix],\n        Some(&fee_payer.pubkey()),\n        &[&fee_payer, &new_account],\n        recent_blockhash,\n    );\n\n    // Submit a transaction to create an account and wait for confirmation\n    let create_account_tx_signature = rpc_client\n        .send_and_confirm_transaction(&create_account_tx)\n        .unwrap();\n\n    // Print transaction signature and account address\n    println!("Transaction signature: {create_account_tx_signature}");\n    println!("New account {} created successfully", new_account.pubkey());\n}\n'))),(0,l.kt)(P,{value:"typescript",label:"Typescript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const createAccountParams = {\n  fromPubkey: fromPubkey.publicKey,\n  newAccountPubkey: newAccountPubkey.publicKey,\n  lamports: rentExemptionAmount,\n  space,\n  programId: SystemProgram.programId,\n};\n\nconst createAccountTransaction = new Transaction().add(\n  SystemProgram.createAccount(createAccountParams)\n);\n\nawait sendAndConfirmTransaction(connection, createAccountTransaction, [\n  fromPubkey,\n  newAccountPubkey,\n]);\n"))),(0,l.kt)(P,{value:"py",label:"py",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'// todo\ndef hello_world():\n  print("Hello, world!")\n')))),(0,l.kt)("h3",{id:"\u5982\u4f55\u5728seed\u4e0a\u521b\u5efa\u4e00\u4e2a\u8d26\u6237-"},"\u5982\u4f55\u5728Seed\u4e0a\u521b\u5efa\u4e00\u4e2a\u8d26\u6237 \ud83e\udd14"),(0,l.kt)("p",null,"\u8981\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"seed"),"\u4e0a\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\uff0c\u5ba2\u6237\u9700\u8981\u751f\u6210\u4e00\u4e2a\u57fa\u672c\u5bc6\u94a5\u5bf9\uff08\u516c\u94a5\u548c\u79c1\u94a5\uff09\u3002\u7136\u540e\uff0c\u9700\u8981\u4ece\u6307\u5b9a\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"seed"),"\u548c\u7a0b\u5e8fID\u751f\u6210\u6d3e\u751f\u7684\u516c\u94a5\u3002\u63a5\u4e0b\u6765\uff0c\u5ba2\u6237\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"SystemProgram::CreateAccountWithSeed"),"\u8c03\u7528\u6765\u6ce8\u518c\u6d3e\u751f\u7684\u516c\u94a5\uff0c\u5e76\u5206\u914d\u6240\u9700\u7684\u6570\u636e\u5b58\u50a8\u5927\u5c0f\u4ee5\u8bbe\u7f6e\u8be5\u8d26\u6237\u3002\u6240\u6709\u540e\u7eed\u64cd\u4f5c\u4e0e\u521b\u5efa\u4e00\u4e2a\u7531\u7cfb\u7edf\u7a0b\u5e8f\u62e5\u6709\u7684\u8d26\u6237\u7c7b\u4f3c\u3002"),(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(P,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use solana_client::rpc_client::RpcClient;\nuse solana_program::pubkey::Pubkey;\nuse solana_program::system_instruction;\nuse solana_sdk::commitment_config::CommitmentConfig;\nuse solana_sdk::native_token::LAMPORTS_PER_SOL;\nuse solana_sdk::signature::{Keypair, Signer};\n\nfn main() {\n    // Create an HTTP RpcClient with specified "confirmed" commitment level\n    // "confirmed" - the node will query the most recent block that has been voted on by supermajority of the cluster.\n    let rpc_url = String::from("https://api.devnet.solana.com");\n\n    let rpc_client = RpcClient::new_with_commitment(rpc_url,CommitmentConfig::confirmed());\n\n    // Generate fee payer and base key pairs\n    let fee_payer = Keypair::new();\n    let base = Keypair::new();\n\n    // Request an airdrop for the fee payer and wait for the transaction to be confirmed\n    let request_airdrop_tx_signature = rpc_client\n        .request_airdrop(&fee_payer.pubkey(), LAMPORTS_PER_SOL)\n        .unwrap();\n    loop {\n        if let ok(confirmed) = rpc_client.confirm_transaction(&request_airdrop_tx_signature) {\n            if confirmed {\n                break;\n            }\n        }\n    }\n\n    // Specify seed\n    let seed = "seed123";\n    // Get system program id\n    let program_id = solana_program::system_program::id();\n\n    // Generate derived public key\n    let derived_pubkey = Pubkey::create_with_seed(&base.pubkey(), seed, &program_id).unwrap();\n\n    // Specify account data length and number of lamports\n    let space = 0;\n    let lamports = LAMPORTS_PER_SOL /10;\n    // Create instruction to create an account with seed\n    let create_account_with_seed_ix = system_instruction::create_account_with_seed(\n        &fee_payer.pubkey(),\n        &derived_pubkey,\n        &base.pubkey(),\n        seed,\n        lamports,\n        space as u64,\n        &program_id,\n    );\n\n    // Get recent blockhash\n    let recent_blockhash = rpc_client.get_latest_blockhash().unwrap();\n    // Create transaction to create an account with seed\n    let create_account_with_seed_tx = solana_sdk::transaction::Transaction::new_signed_with_payer(\n        &[create_account_with_seed_ix],\n        Some(&fee_payer.pubkey()),\n        &[&fee_payer, &base],]\n        recent_blockhash,\n    );\n\n    // Submit a transaction to create an account with seec and wait for confirmation\n    let create_account_with_seed_tx_signature = rpc_client\n        .send_and_confirm_transaction(&create_account_with_seed_tx)\n        .unwrap();\n\n    // Print transaction signature and account address\n    println!("Transaction signature: {create_account_with_seed_tx_signature}");\n    println!("New account {} created with seed successfully",\n        derived_pubkey\n    );\n}\n\n'))),(0,l.kt)(P,{value:"typescript",label:"typescript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"PublicKey.createWithSeed(basePubkey, seed, programId);\n\nconst tx = new Transaction().add(\n  SystemProgram.createAccountWithSeed({\n    fromPubkey: feePayer.publicKey, // funder\n    newAccountPubkey: derived,\n    basePubkey: basePubkey,\n    seed: seed,\n    lamports: 1e8, // 0.1 SOL\n    space: 0,\n    programId: owner,\n  })\n);\n\nconsole.log(\n  `txhash: ${await sendAndConfirmTransaction(connection, tx, [feePayer, base])}`\n);\n"))),(0,l.kt)(P,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n')))),(0,l.kt)("h3",{id:"\u5982\u4f55\u5173\u95ed\u8d26\u6237-"},"\u5982\u4f55\u5173\u95ed\u8d26\u6237 \ud83e\udd14"),(0,l.kt)("p",null,"\u5173\u95edSolana\u8d26\u6237\uff08\u5220\u9664\u6240\u6709\u5b58\u50a8\u7684\u6570\u636e\uff09\u9700\u8981\u5148\u79fb\u9664\u6240\u6709\u5b58\u50a8\u7684SOL\u3002"),(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(P,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"use solana_program::{\n    account_info::next_account_info, account_info::AccountInfo, entrypoint,\n    entrypoint::ProgramResult, pubkey::Pubkey,\n};\n\nentrypoint!(process_instruction);\n\nfn process_instruction(\n    _program_id: &Pubkey,\n    accounts: &[AccountInfo],\n    _instruction_data: &[u],\n) -> ProgramResult {\n    let account_info_iter = &mut accounts.iter();\n\n    // Get source and destination accounts info\n    let source_account_info = next_account_info(account_info_iter)?;\n    let dest_account_info = next_account_info(account_info_iter)?;\n\n    // Return lamports back to the destination account\n    let dest_starting_lamports = dest_account_info.lamports();\n    **dest_account_info.lamports.borrow_mut() = dest_starting_lamports\n        .checked_add(source_account_info.lamports())\n        .unwrap();\n    **source_account_info.lamports.borrow_mut() = 0;\n\n    // Remove source account data\n    let mut source_data = source_account_info.data.borrow_mut();\n    source_data.fill(0);\n\n    ok(())\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use solana_client::rpc_client::RpcClient;\nuse solana_program::instruction::{AccountMeta, Instruction};\nuse solana_program::pubkey::Pubkey;\nuse solana_program::system_instruction;\nuse solana_sdk::commitment_config::CommitmentConfig;\nuse solana_sdk::native_token::LAMPORTS_PER_SOL;\nuse solana_sdk::signature::{Keypair, Signer};\nuse std::str::FromStr;\n\nfn main() {\n    // Deploy the program and then provide the resulting program ID\n    let> program_id = Pubkey::from_str("DRivgExW1MG9PRd4WEZjo4ePtUfjmubgStcXT3Fxwapy").unwrap();\n\n    // Create an HTTP RpcClient with specified "confirmed" commitment level\n    // "confirmed" - the node will query the most recent block that has been voted on by supermajority of the cluster.\n    let rpc_url = String::from("https://api.devnet.solana.com");\n\n    let rpc_client = RpcClient::new_with_commitment(rpc_url,CommitmentConfig::confirmed());\n\n    // Generate fee payer and new account key pairs/\n    let fee_payer = Keypair::new();\n    let new_account = Keypair::new();\n\n    // Request an airdrop for the fee payer and wait for the transaction to be confirmed\n    let request_airdrop_tx_signature = rpc_client\n        .request_airdrop(&fee_payer.pubkey(), LAMPORTS_PER_SOL)\n        .unwrap();\n    loop {\n        if let Ok(confirmed) = rpc_client.confirm_transaction(&request_airdrop_tx_signature) {\n            if confirmed {\n                break;\n            }\n        }\n    }\n\n    // Specify account data length\n    let space = 0;\n\n    // Get minimum balance required to make an account with specified data length rent exempt\n    let rent_exemption_amount = rpc_client\n        .get_minimum_balance_for_rent_exemption(space)\n        .unwrap();\n    // Create instruction to create an account (NOTE: account owner must be program id, so in the future we can close account)\n    let create_account_ix = system_instruction::create_account(\n        &fee_payer.pubkey(),\n        &new_account.pubkey(),\n        rent_exemption_amount,\n        space as u64,\n        &program_id,\n    );\n\n    / Get recent blockhash/\n    let recent_blockhash = rpc_client.get_latest_blockhash().unwrap();\n    // Create transaction to create an account\n    let create_account_tx = solana_sdk::transaction::Transaction::new_signed_with_payer(\n        &[create_account_ix],\n        Some(&fee_payer.pubkey()),\n        &[&fee_payer, &new_account],\n        recent_blockhash,\n    );\n\n    // Submit a transaction to create an account and wait for confirmation\n    let create_account_tx_signature = rpc_client\n        .send_and_confirm_transaction(&create_account_tx)\n        .unwrap();\n\n    // Print transaction signature and account address\n    println!("Transaction signature: {create_account_tx_signature}");\n    println!("New account {} created successfully", new_account.pubkey());\n\n    // Create instruction to close an account with provided two accounts:span>\n    // 1. Account to be closed (writable, not signer)\n    // 2. Fee payed account (writable, not signer)\n    // NOTE:  As the default AccountMeta::new constructor creates writable accounts,\n    //        use AccountMeta::new_readonly to specify that an account is not writable.\n    // On chain program does not expect any instruction_data, so the instruction data field contains empty vector\n    let close_account_ix = Instruction {\n        program_id,\n        accounts: vec![\n            AccountMeta::new(new_account.pubkey(), false),\n            AccountMeta::new(fee_payer.pubkey(), false),\n        ],\n        data: vec![],\n    };\n\n    // Get recent blockhash\n    let recent_blockhash = rpc_client.get_latest_blockhash().unwrap();\n    // Create transaction to close an account\n    let close_account_tx = solana_sdk::transaction::Transaction::new_signed_with_payer(\n        &[close_account_ix],\n        Some(&fee_payer.pubkey()),\n        &[&fee_payer],\n        recent_blockhash,\n    );\n\n    // Submit a transaction to close an account and wait for confirmation\n    let close_account_tx_signature = rpc_client\n        .send_and_confirm_transaction(&close_account_tx)\n        .unwrap();\n\n    // Print transaction signature and account address\n    println!("Transaction signature: {close_account_tx_signature}");\n    println!("New account {} closed successfully", new_account.pubkey());\n}\n'))),(0,l.kt)(P,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def hello_world():\n  print("Hello, world!")\n'))),(0,l.kt)(P,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n')))),(0,l.kt)("h3",{id:"\u94fe\u4e0a\u8d26\u6237\u6570\u636e"},"\u94fe\u4e0a\u8d26\u6237\u6570\u636e"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(890).Z,width:"1200",height:"834"})),(0,l.kt)("p",null,"\u6bcf\u4e2a\u8d26\u6237\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5143\u6570\u636e\u96c6\uff0c\u56e0\u6b64\u534f\u8bae\u53ef\u4ee5\u8f7b\u677e\u7406\u89e3\u8d26\u6237\u7684\u7c7b\u578b\u548c\u9644\u52a0\u4fe1\u606f\u3002\u5143\u6570\u636e\u5305\u62ec\ud83d\udc47\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lamports")," - \u8d26\u6237\u7684SOL\u4f59\u989d\uff0c\u4ee5lamports\u4e3a\u5355\u4f4d\uff0c\u5176\u4e2d1 SOL = 1000_000_000 lamports\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"owner")," - \u8fd9\u662f\u62e5\u6709\u8be5\u8d26\u6237\u7684\u7a0b\u5e8f\u7684\u5730\u5740\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"executable")," - \u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\uff0c\u8868\u793a\u8d26\u6237\u662f\u5426\u5305\u542b\u53ef\u6267\u884c\u4ee3\u7801\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data")," - \u5b58\u50a8\u5728\u8d26\u6237\u4e2d\u7684\u539f\u59cb\u6570\u636e\u5b57\u8282\u6570\u7ec4\uff0c\u65e0\u8bba\u662f\u5b58\u50a8\u53d8\u91cf\u8fd8\u662f\u53ef\u6267\u884c\u4ee3\u7801\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rent_epoch")," - \u8868\u793a\u8d26\u6237\u5c06\u6b20\u79df\u7684\u4e0b\u4e00\u4e2a\u65f6\u671f\u3002")),(0,l.kt)("h2",{id:"\u7b7e\u7f72\u4eba\u548c\u6240\u6709\u8005"},"\u7b7e\u7f72\u4eba\u548c\u6240\u6709\u8005"),(0,l.kt)("h3",{id:"\u7b7e\u7f72\u8005"},"\u7b7e\u7f72\u8005"),(0,l.kt)("p",null,"\u6bcf\u4e2a\u4ea4\u6613\u90fd\u660e\u786e\u5217\u51fa\u4e86\u4ea4\u6613\u6307\u4ee4\u4e2d\u5f15\u7528\u7684\u6240\u6709\u8d26\u6237\u516c\u94a5\u3002\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u516c\u94a5\u90fd\u9644\u5e26\u6709\u4ea4\u6613\u7b7e\u540d\u3002\u8fd9\u4e9b\u7b7e\u540d\u5411\u94fe\u4e0a\u7a0b\u5e8f\u53d1\u51fa\u4fe1\u53f7\uff0c\u8868\u660e\u8d26\u6237\u6301\u6709\u4eba\u5df2\u7ecf\u6388\u6743\u8be5\u4ea4\u6613\u3002\u901a\u5e38\uff0c\u7a0b\u5e8f\u4f1a\u4f7f\u7528\u6388\u6743\u6765\u5141\u8bb8\u4ece\u8d26\u6237\u4e2d\u6263\u6b3e\u6216\u4fee\u6539\u5176\u6570\u636e\u3002"),(0,l.kt)("p",null,"\u4ea4\u6613\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\u7b7e\u540d\uff0c\u6bcf\u4e2a\u6570\u5b57\u7b7e\u540d\u5bf9\u5e94\u4e8e\u4ea4\u6613\u5f15\u7528\u7684\u8d26\u6237\u5730\u5740"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("strong",{parentName:"p"},"\u7b7e\u540d"),"\n\u4e00\u4e2a\u7531R\uff0832\u5b57\u8282\uff09\u548cS\uff0832\u5b57\u8282\uff09\u7ec4\u6210\u768464\u5b57\u8282ed25519\u7b7e\u540d\u3002\u8981\u6c42R\u662f\u4e00\u4e2a\u975e\u5c0f\u9636\u7684\u6253\u5305Edwards\u70b9\uff0c\u800cS\u662f\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"0 <= S < L"),"\u7684\u8303\u56f4\u5185\u7684\u6807\u91cf\u3002\u8fd9\u4e2a\u8981\u6c42\u786e\u4fdd\u4e86\u6ca1\u6709\u7b7e\u540d\u53ef\u5851\u6027\u3002\u6bcf\u4e2a\u4ea4\u6613\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u7528\u4e8e\u8d39\u7528\u8d26\u6237\u7684\u7b7e\u540d\u3002\u56e0\u6b64\uff0c\u4ea4\u6613\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7b7e\u540d\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4ea4\u6613ID\u3002"),(0,l.kt)("p",{parentName:"admonition"},"\u4e86\u89e3\u66f4\u591a\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/terminology#signature"},"Solana\u6587\u4ef6/\u672f\u8bed"))),(0,l.kt)("p",null,"\u8fd9\u4e9b\u5730\u5740\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"ed25519"),"\u5bc6\u94a5\u5bf9\u7684\u516c\u94a5\uff0c\u800c\u7b7e\u540d\u5219\u8868\u793a\u6301\u6709\u76f8\u5e94\u79c1\u94a5\u7684\u4eba\u7b7e\u7f72\u5e76\u56e0\u6b64\u201c\u6388\u6743\u201d\u4e86\u8be5\u4ea4\u6613\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u8d26\u6237\u88ab\u79f0\u4e3a\u7b7e\u7f72\u8005\u3002\u8d26\u6237\u662f\u5426\u662f\u7b7e\u7f72\u8005\u662f\u901a\u8fc7\u8d26\u6237\u7684\u5143\u6570\u636e\u6765\u4f20\u8fbe\u7ed9\u7a0b\u5e8f\u7684\u3002\u7a0b\u5e8f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u505a\u51fa\u6743\u9650\u51b3\u7b56\u3002"),(0,l.kt)("h3",{id:"\u6240\u6709\u6743\u548c\u7a0b\u5e8f\u7684\u8f6c\u8ba9"},"\u6240\u6709\u6743\u548c\u7a0b\u5e8f\u7684\u8f6c\u8ba9"),(0,l.kt)("p",null,"\u5728Solana\u4e2d\uff0c\u62e5\u6709\u8d26\u6237\u79c1\u94a5\u7684\u4eba\u88ab\u79f0\u4e3a\u6388\u6743\u8005\u3002\u6388\u6743\u8005\u53ef\u4ee5\u6388\u4e88\u8d26\u6237\u6240\u6709\u6743\u3002"),(0,l.kt)("p",null,"\ud83d\udcceOwner \u6307\u7684\u662f\u80fd\u591f\u4fee\u6539\u8d26\u6237\u6570\u636e\u7684\u7a0b\u5e8f\u3002Solana \u4e2d\u7684\u6bcf\u4e2a\u8d26\u6237\u90fd\u6709\u4e00\u4e2a\u6240\u6709\u8005\u3002\u521b\u5efa\u7684\u8d26\u6237\u88ab\u521d\u59cb\u5316\u4e3a\u7531\u4e00\u4e2a\u540d\u4e3a\u7cfb\u7edf\u7a0b\u5e8f\u7684\u5185\u7f6e\u7a0b\u5e8f\u62e5\u6709\uff0c\u5e76\u88ab\u79f0\u4e3a\u7cfb\u7edf\u8d26\u6237\u3002\u5982\u679c\u8d26\u6237\u7684 ID \u4e0e\u6240\u6709\u8005\u5339\u914d\uff0c\u8fd0\u884c\u65f6\u4f1a\u6388\u4e88\u8be5\u7a0b\u5e8f\u5bf9\u8d26\u6237\u7684\u5199\u5165\u6743\u9650\u3002\u5bf9\u4e8e\u7cfb\u7edf\u7a0b\u5e8f\u7684\u60c5\u51b5\uff0c\u8fd0\u884c\u65f6\u5141\u8bb8\u5ba2\u6237\u7aef\u8f6c\u79fb lamports\uff0c\u5e76\u4e14\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u5206\u914d\u8d26\u6237\u6240\u6709\u6743\uff0c\u5373\u5c06\u6240\u6709\u8005\u66f4\u6539\u4e3a\u4e0d\u540c\u7684\u7a0b\u5e8f ID\u3002\u5982\u679c\u4e00\u4e2a\u8d26\u6237\u6ca1\u6709\u88ab\u4efb\u4f55\u7a0b\u5e8f\u62e5\u6709\uff0c\u90a3\u4e48\u8be5\u7a0b\u5e8f\u53ea\u88ab\u5141\u8bb8\u8bfb\u53d6\u5176\u6570\u636e\u5e76\u5411\u8d26\u6237\u5b58\u5165\u8d44\u91d1\u3002"),(0,l.kt)("p",null,"\u6709\u51e0\u4e2a\u91cd\u8981\u7684\u6240\u6709\u6743\u89c4\u5219\ud83d\udc49\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(2986).Z,width:"1200",height:"320"})),(0,l.kt)("p",null,"Solana\u7684\u5b89\u5168\u6a21\u578b\u5f3a\u5236\u8981\u6c42\u53ea\u6709\u8d26\u6237\u7684Owner\u7a0b\u5e8f\u624d\u80fd\u4fee\u6539\u8d26\u6237\u7684\u6570\u636e\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u76f8\u4fe1\u6570\u636e\u662f\u901a\u8fc7\u5b83\u4eec\u62e5\u6709\u7684\u8d26\u6237\u4f20\u9012\u7ed9\u5b83\u4eec\u7684\u3002\u8fd0\u884c\u65f6\u901a\u8fc7\u62d2\u7edd\u4efb\u4f55\u5305\u542b\u8bd5\u56fe\u5411\u975e\u81ea\u6709\u8d26\u6237\u5199\u5165\u6570\u636e\u7684\u7a0b\u5e8f\u7684\u4ea4\u6613\u6765\u5f3a\u5236\u6267\u884c\u8fd9\u4e00\u89c4\u5b9a\u3002"),(0,l.kt)("h2",{id:"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740pdas-1"},"\u7a0b\u5e8f\u6d3e\u751f\u5730\u5740\uff08PDAs\uff09"),(0,l.kt)("h3",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,l.kt)("p",null,"Solana\u8d26\u6237\u670910Mb\u7684\u8d26\u6237\u5927\u5c0f\u9650\u5236\uff1b\u8fdf\u65e9\u4f60\u4f1a\u5728\u7528\u6237\u6570\u636e\u4e0a\u8fbe\u5230\u8fd9\u4e2a\u9650\u5236\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0csolana-sdk\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06\u7528\u6237\u6570\u636e\u5b58\u50a8\u5728\u5c0f\u578b\u7684\u7531\u7528\u6237\u751f\u6210\u7684\u8d26\u6237\u4e0a\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a\u7a0b\u5e8f\u6d3e\u751f\u8d26\u6237\uff08PDA\uff09\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4e00\u79cd\u7531\u4e0ePubkey\u76f8\u540c\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u6807\u8bc6\u7684\u8d26\u6237\uff0c\u4f46\u6ca1\u6709\u76f8\u5e94\u7684\u79c1\u94a5\u3002\u7b80\u800c\u8a00\u4e4b\uff0cPDAs\u662f\u53ea\u6709\u7a0b\u5e8f\uff08program_id\uff09\u6709\u6743\u7b7e\u540d\u7684\u8d26\u6237\u5bc6\u94a5\u3002"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"private key"),(0,l.kt)("p",{parentName:"admonition"},"\u4e00\u4e2a\u7a0b\u5e8f\u5730\u5740\u4e0d\u5728ed25519\u66f2\u7ebf\u4e0a\uff0c\u56e0\u6b64\u5b83\u6ca1\u6709\u4e0e\u4e4b\u5173\u8054\u7684\u6709\u6548\u79c1\u94a5\uff0c\u56e0\u6b64\u65e0\u6cd5\u4e3a\u5176\u751f\u6210\u7b7e\u540d\u3002\u867d\u7136\u5b83\u6ca1\u6709\u81ea\u5df1\u7684\u79c1\u94a5\uff0c\u4f46\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u53d1\u51fa\u5305\u542b\u7a0b\u5e8f\u5730\u5740\u4f5c\u4e3a\u7b7e\u540d\u8005\u7684\u6307\u4ee4\u3002"),(0,l.kt)("p",{parentName:"admonition"},"\u4e86\u89e3\u66f4\u591a\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/developing/programming-model/calling-between-programs#private-keys-for-program-addresses"},"Solana\u6587\u6863/\u5f00\u53d1/\u7f16\u7a0b\u6a21\u578b/\u7a0b\u5e8f\u95f4\u8c03\u7528"))),(0,l.kt)("h3",{id:"\u5173\u952e\u8981\u70b9"},"\u5173\u952e\u8981\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"PDA\u662f32\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff0c\u770b\u8d77\u6765\u50cf\u516c\u94a5\uff0c\u4f46\u6ca1\u6709\u76f8\u5e94\u7684\u79c1\u94a5\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"findProgramAddress"),"\u5c06\u4ece",(0,l.kt)("inlineCode",{parentName:"li"},"programId"),"\u548c",(0,l.kt)("inlineCode",{parentName:"li"},"seeds"),"\uff08\u5b57\u8282\u96c6\u5408\uff09\u786e\u5b9a\u6027\u5730\u6d3e\u751f\u51fa\u4e00\u4e2aPDA\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u201cbump\u201d\u5c06\u4e00\u4e2a\u6f5c\u5728\u7684PDA\u4eceed25519\u692d\u5706\u66f2\u7ebf\u4e0a\u63a8\u5f00"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u79cd\u5b50\u548c\u78b0\u649e\u6765\u4e3a\u5176PDA\u7b7e\u540d\uff0c\u4ee5\u8c03\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"invoke_signed"),"\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff09"),(0,l.kt)("li",{parentName:"ul"},"PDA\u53ea\u80fd\u7531\u5176\u884d\u751f\u7684\u7a0b\u5e8f\u8fdb\u884c\u7b7e\u540d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9664\u4e86\u5141\u8bb8\u7a0b\u5e8f\u4e3a\u4e0d\u540c\u7684\u6307\u4ee4\u7b7e\u540d\u5916\uff0cPDA\u8fd8\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u54c8\u5e0c\u6620\u5c04\u7684\u63a5\u53e3\u6765",(0,l.kt)("a",{parentName:"li",href:"https://creatorsdao.github.io/all-in-one-solana/cookbook-zh/guides/account-maps"},"\u7d22\u5f15\u8d26\u6237"),"\u3002")),(0,l.kt)("h3",{id:"\u826f\u597d\u7684\u5b9e\u8df5"},"\u826f\u597d\u7684\u5b9e\u8df5"),(0,l.kt)("p",null,"\u60a8\u53ef\u4ee5\u9075\u5faa\u4ee5\u4e0b\u5173\u4e8e\u4f7f\u7528PDA\u7684\u5efa\u8bae\ud83d\udc49\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5728\u9700\u8981\u5b58\u50a8\u7528\u6237\u6570\u636e\u65f6\uff0c\u59cb\u7ec8\u4f7f\u7528PDA\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u5b58\u50a8\u5728\u7a0b\u5e8f\u5b58\u50a8\u5668\u4e0a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"find_program_address"),"\u91cd\u65b0\u751f\u6210\u7ed9\u5b9a\u7684PDA\u5730\u5740\u6765\u9a8c\u8bc1\u5b83\u3002\u5982\u679c\u60a8\u7684\u7a0b\u5e8f\u9700\u8981\u5c3d\u53ef\u80fd\u5c11\u5730\u4f7f\u7528gas\uff0c\u60a8\u53ef\u4ee5\u5c06",(0,l.kt)("inlineCode",{parentName:"li"},"find_program_address"),"\u4fdd\u7559\u5728\u5ba2\u6237\u7aef\uff0c\u5e76\u4ec5\u9a8c\u8bc1\u8be5\u8d26\u6237\u5c1a\u672a\u521b\u5efa\u6216\u521d\u59cb\u5316\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u6240\u6709\u76f8\u5173\u8d26\u6237\u6765\u4e3a",(0,l.kt)("inlineCode",{parentName:"li"},"find_program_address"),"\u51fd\u6570\u63d0\u4f9b\u4e00\u4e2a\u79cd\u5b50\uff0c\u5e76\u4f7f\u7528\u679a\u4e3e\u6765\u751f\u6210\u79cd\u5b50\uff0c\u4ee5\u907f\u514d\u79cd\u5b50\u4e4b\u95f4\u7684\u51b2\u7a81\u3002")),(0,l.kt)("h3",{id:"\u5982\u4f55\u521b\u5efapda\u8d26\u6237"},"\u5982\u4f55\u521b\u5efaPDA\u8d26\u6237"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"\ud83d\udccc\u6ce8\u610f\uff1aPDA\u8d26\u6237\u53ea\u80fd\u5728\u8be5\u7a0b\u5e8f\u4e0a\u521b\u5efa\u3002\u5730\u5740\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u751f\u6210\u3002")),(0,l.kt)("p",null,"\u8981\u7406\u89e3PDA\u80cc\u540e\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u8003\u8651\u4e00\u4e0bPDA\u5e76\u975e\u6280\u672f\u4e0a\u521b\u9020\u51fa\u6765\u7684\uff0c\u800c\u662f\u88ab\u53d1\u73b0\u7684\u3002PDA\u662f\u7531\u79cd\u5b50\u548c\u7a0b\u5e8fID\u7684\u7ec4\u5408\u751f\u6210\u7684\u3002\u8fd9\u4e2a\u79cd\u5b50\u548c\u7a0b\u5e8fID\u7684\u7ec4\u5408\u4f1a\u901a\u8fc7sha256\u54c8\u5e0c\u51fd\u6570\u8fd0\u884c\uff0c\u4ee5\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u751f\u6210\u4e86\u4e00\u4e2a\u4f4d\u4e8eed25519\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u516c\u94a5\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"find_program_address"),"\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u6b64\u51fd\u6570\uff09\u4ece",(0,l.kt)("inlineCode",{parentName:"p"},"program_id"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"seeds"),"\uff08\u5b57\u8282\u96c6\u5408\uff09\u786e\u5b9a\u6027\u5730\u6d3e\u751f\u51fa\u4e00\u4e2aPDA\u3002"),(0,l.kt)("p",null,"\u5f53\u751f\u6210\u4e00\u4e2aPDA\u65f6\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"findProgramAddress"),"\u5c06\u8fd4\u56de\u5730\u5740\u548c\u7528\u4e8e\u5c06\u5730\u5740\u4ece\u692d\u5706\u66f2\u7ebf\u4e0a\u79fb\u9664\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"bump"),"\u3002\u6709\u4e86\u8fd9\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"bump"),"\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u4e3a\u9700\u8981\u5176PDA\u7684\u4efb\u4f55\u6307\u4ee4\u8fdb\u884c\u7b7e\u540d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'\n// A pda is a public key of an account\n// A bump (one byte) is used to push a potential PDA off the ed25519 elliptic curve\nlet ( pda, bump_seed) = Pubkey::find_program_address(&[b"random-seed"], &program_id);\n')),(0,l.kt)("p",null,"\u521b\u5efa\u4e00\u4e2aPDA\u57fa\u672c\u4e0a\u610f\u5473\u7740\u7528\u7a7a\u95f4\u521d\u59cb\u5316\u5730\u5740\u5e76\u8bbe\u7f6e\u5176\u72b6\u6001\u3002\u4e00\u4e2a\u666e\u901a\u7684\u5bc6\u94a5\u5bf9\u8d26\u6237\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e4b\u5916\u521b\u5efa\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u5b83\u7684\u72b6\u6001\u521d\u59cb\u5316\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8ePDA\u6765\u8bf4\uff0c\u5b83\u662f\u5728\u94fe\u4e0a\u521b\u5efa\u7684\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u4ee3\u8868\u81ea\u5df1\u7b7e\u540d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"invoke_signed"),"\u6765\u4f20\u9012PDA\u7684\u79cd\u5b50\uff0c\u4ee5\u53ca\u8d44\u91d1\u8d26\u6237\u7684\u7b7e\u540d\uff0c\u4ece\u800c\u521b\u5efa\u4e00\u4e2aPDA\u8d26\u6237\u3002"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u9700\u89813\u4e2a\u53c2\u6570\ud83d\udc49:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"instruction")," - \u8c03\u7528\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"account_infos")," - \u6839\u636e\u6307\u793a\u6240\u9700\u7684\u8d26\u6237\uff0c\u5176\u4e2d\u4e00\u4e2a\u8d26\u6237\u9700\u8981PDA\u4f5c\u4e3a\u7b7e\u7f72\u4eba\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"signers_seeds")," - \u7528\u4e8e\u6d3e\u751fPDA\u7684\u79cd\u5b50\u3002")),(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(P,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use solana_program::{\n   account_info::{next_account_info, AccountInfo},\n   entrypoint,\n   entrypoint::ProgramResult,\n   program::invoke_signed,\n   pubkey::Pubkey,\n   system_instruction,\n   system_program,\n};\n\nentrypoint!(process_instruction);\n\nfn process_instruction(\n   program_id: &Pubkey,\n   accounts: &[AccountInfo],\n   instruction_data:&[u8],\n) -> ProgramResult {\n   let account_info_iter = &mut accounts.iter();\n   let payer = next_account_info(account_info_iter)?;\n   let vault_pda = next_account_info(account_info_iter)?;\n   let system_program = next_account_info(account_info_iter)?;\n\n   assert!(payer.is_writable);\n   assert!(payer.is_signer);\n   assert!)vault_pda.is_writable);\n   assert_eq!(vault_pda.owner, &system_program::ID);\n   assert!(system_program::check_id(system_program.key));\n\n   let vault_bump_seed = instruction_data[0];\n   let vault_seeds = &[b"vault", payer.key.as_ref(), &[vault_bump_seed]];\n   let expected_vault_pda = Pubkey::create_program_address(vault_seeds, program_id)?;\n\n   assert_eq!(vault_pda.key, &expected_vault_pda);\n\n   let lamports = 10000000;\n   let vault_size = 16;\n\n   invoke_signed(\n       &system_instruction::create_account&\n           &payer.key,\n           &vault_pda.key,\n           lamports,\n           vault_size,\n           &program_id,\n       ),\n       &[\n           payer.clone(),\n           vault_pda.clone(),\n       ],\n       &[\n           &[\n               b"vault",\n               payer.key.as_ref(),\n               &[vault_bump_seed],\n           ],\n       ]\n   )?;\n   Ok(())\n}\n'))),(0,l.kt)(P,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def hello_world():\n  print("Hello, world!")\n'))),(0,l.kt)(P,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n')))),(0,l.kt)("h2",{id:"\u7a0b\u5e8f"},"\u7a0b\u5e8f"),(0,l.kt)("h3",{id:"-\u5b9a\u4e49-1"},"\ud83e\udd13 \u5b9a\u4e49"),(0,l.kt)("p",null,"Solana\u7a0b\u5e8f\u901a\u5e38\u5728\u5176\u4ed6\u533a\u5757\u94fe\u4e0a\u88ab\u79f0\u4e3a\u201c\u667a\u80fd\u5408\u7ea6\u201d\uff0c\u5b83\u4eec\u662f\u5728\u533a\u5757\u94fe\u4e0a\u6bcf\u4e2a\u4ea4\u6613\u4e2d\u89e3\u91ca\u53d1\u9001\u7684\u6307\u4ee4\u7684\u53ef\u6267\u884c\u4ee3\u7801\u3002\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u90e8\u7f72\u5230\u7f51\u7edc\u7684\u6838\u5fc3\u4f5c\u4e3a\u539f\u751f\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u7531\u4efb\u4f55\u4eba\u53d1\u5e03\u4e3a\u94fe\u4e0a\u7a0b\u5e8f\u3002\u7a0b\u5e8f\u662f\u7f51\u7edc\u7684\u6838\u5fc3\u6784\u5efa\u6a21\u5757\uff0c\u8d1f\u8d23\u5904\u7406\u4ece\u94b1\u5305\u4e4b\u95f4\u7684\u4ee3\u5e01\u8f6c\u79fb\u5230\u63a5\u53d7DAO\u7684\u6295\u7968\uff0c\u4ee5\u53ca\u8ddf\u8e2aNFT\u6240\u6709\u6743\u7b49\u5404\u79cd\u529f\u80fd\u3002"),(0,l.kt)("p",null,"\u8fd9\u4e24\u79cd\u7c7b\u578b\u7684\u7a0b\u5e8f\u90fd\u8fd0\u884c\u5728Sealevel\u8fd0\u884c\u65f6\u4e4b\u4e0a\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u5173\u4e8eSealevel\u7684\u4fe1\u606f\uff09\uff0c\u5b83\u662fSolana\u7684\u5e76\u884c\u5904\u7406\u6a21\u578b\uff0c\u6709\u52a9\u4e8e\u5b9e\u73b0\u533a\u5757\u94fe\u7684\u9ad8\u4ea4\u6613\u901f\u5ea6\u3002"),(0,l.kt)("h3",{id:"\u91cd\u70b9-1"},"\ud83d\udccd\u91cd\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u88ab\u6807\u8bb0\u4e3a\u201c\u53ef\u6267\u884c\u201d\u7684\u7279\u6b8a\u7c7b\u578b\u8d26\u6237\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u53ef\u4ee5\u62e5\u6709\u5176\u4ed6\u8d26\u6237\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u53ea\u80fd\u66f4\u6539\u81ea\u5df1\u62e5\u6709\u7684\u6570\u636e\u6216\u501f\u65b9\u8d26\u6237\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4efb\u4f55\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u8bfb\u53d6\u6216\u5411\u53e6\u4e00\u4e2a\u8d26\u6237\u5b58\u6b3e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u88ab\u8ba4\u4e3a\u662f\u65e0\u72b6\u6001\u7684\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u8d26\u6237\u4e2d\u5b58\u50a8\u7684\u4e3b\u8981\u6570\u636e\u662f\u7f16\u8bd1\u540e\u7684SBF\u4ee3\u7801\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u53ef\u4ee5\u7531\u5176\u6240\u6709\u8005\u8fdb\u884c\u5347\u7ea7\uff08\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u5904\u7406\u6765\u81ea\u6700\u7ec8\u7528\u6237\u548c\u5176\u4ed6\u7a0b\u5e8f\u7684\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6240\u6709\u7684\u7a0b\u5e8f\u90fd\u662f\u65e0\u72b6\u6001\u7684\uff1a\u5b83\u4eec\u4e0e\u4e4b\u4ea4\u4e92\u7684\u4efb\u4f55\u6570\u636e\u90fd\u5b58\u50a8\u5728\u901a\u8fc7\u6307\u4ee4\u4f20\u9012\u7684\u5355\u72ec\u8d26\u6237\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6240\u6709\u7a0b\u5e8f\u90fd\u7531BPF Loader\u62e5\u6709\u5e76\u7531Solana Runtime\u6267\u884c\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u5173\u4e8eSolana Runtime\u7684\u4fe1\u606f\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f00\u53d1\u8005\u6700\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u662fRust\u6216C++\uff0c\u4f46\u53ef\u4ee5\u9009\u62e9\u4efb\u4f55\u9488\u5bf9LLVM\u7684BPF\u540e\u7aef\u7684\u8bed\u8a00\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u5173\u4e8eBPF\u7684\u4fe1\u606f\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6240\u6709\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u5165\u53e3\u70b9\uff0c\u6307\u4ee4\u5904\u7406\u5728\u6b64\u5904\u8fdb\u884c\uff08\u5373",(0,l.kt)("inlineCode",{parentName:"li"},"process_instruction"),"\uff09\uff1b\u53c2\u6570\u59cb\u7ec8\u5305\u62ec\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"program_id"),": PubKey"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accounts"),": array account"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"instruction_data"),": byte array")))),(0,l.kt)("h3",{id:"\u7a0b\u5e8f\u7c7b\u578b"},"\u7a0b\u5e8f\u7c7b\u578b"),(0,l.kt)("p",null,"Solana\u533a\u5757\u94fe\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u7a0b\u5e8f\ud83d\udc47\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u672c\u5730\u7a0b\u5e8f"),(0,l.kt)("li",{parentName:"ul"},"\u94fe\u4e0a\u7a0b\u5e8f")),(0,l.kt)("h3",{id:"\u672c\u5730\u7a0b\u5e8f"},"\u672c\u5730\u7a0b\u5e8f"),(0,l.kt)("p",null,"\u672c\u5730\u7a0b\u5e8f\u662f\u76f4\u63a5\u6784\u5efa\u5728Solana\u533a\u5757\u94fe\u6838\u5fc3\u4e2d\u7684\u7a0b\u5e8f\u3002"),(0,l.kt)("p",null,"\u7c7b\u4f3c\u4e8eSolana\u4e2d\u7684\u201c\u94fe\u4e0a\u201d\u7a0b\u5e8f\uff0c\u672c\u5730\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u4efb\u4f55\u5176\u4ed6\u7a0b\u5e8f/\u7528\u6237\u8c03\u7528\u3002\u7136\u800c\uff0c\u5b83\u4eec\u53ea\u80fd\u4f5c\u4e3a\u6838\u5fc3\u533a\u5757\u94fe\u548c\u96c6\u7fa4\u66f4\u65b0\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5347\u7ea7\u3002\u8fd9\u4e9b\u672c\u5730\u7a0b\u5e8f\u7684\u5347\u7ea7\u662f\u901a\u8fc7\u5bf9\u4e0d\u540c\u96c6\u7fa4\u7684\u53d1\u5e03\u8fdb\u884c\u63a7\u5236\u7684\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u5173\u4e8eSolana\u96c6\u7fa4\u7684\u4fe1\u606f\uff09\u3002"),(0,l.kt)("p",null,"\u672c\u5730\u7a0b\u5e8f\u7684\u4f8b\u5b50\u5305\u62ec\ud83d\udc47\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7cfb\u7edf\u7a0b\u5e8f\uff1a\u521b\u5efa\u65b0\u8d26\u6237\uff0c\u8f6c\u79fb\u4ee3\u5e01\u7b49\u7b49"),(0,l.kt)("li",{parentName:"ul"},"BPF\u52a0\u8f7d\u7a0b\u5e8f\uff1a\u5728\u94fe\u4e0a\u90e8\u7f72\u3001\u5347\u7ea7\u548c\u6267\u884c\u7a0b\u5e8f"),(0,l.kt)("li",{parentName:"ul"},"\u6295\u7968\u7a0b\u5e8f\uff1a\u521b\u5efa\u548c\u7ba1\u7406\u8d26\u6237\uff0c\u8ddf\u8e2a\u9a8c\u8bc1\u8005\u7684\u6295\u7968\u72b6\u6001\u548c\u5956\u52b1\u3002")),(0,l.kt)("h3",{id:"\u94fe\u4e0a\u7a0b\u5e8f"},"\u94fe\u4e0a\u7a0b\u5e8f"),(0,l.kt)("p",null,"\u8fd9\u4e9b\u7531\u7528\u6237\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u5728\u5176\u4ed6\u533a\u5757\u94fe\u4e0a\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u667a\u80fd\u5408\u7ea6\u201d\uff0c\u76f4\u63a5\u90e8\u7f72\u5230\u533a\u5757\u94fe\u4e0a\u4f9b\u4efb\u4f55\u4eba\u8fdb\u884c\u4ea4\u4e92\u548c\u6267\u884c\u3002\u56e0\u6b64\u88ab\u79f0\u4e3a\u201c\u94fe\u4e0a\u201d\u3002"),(0,l.kt)("p",null,"\u5b9e\u9645\u4e0a\uff0c\u201c\u94fe\u4e0a\u7a0b\u5e8f\u201d\u662f\u6307\u4efb\u4f55\u4e0d\u76f4\u63a5\u5d4c\u5165Solana\u96c6\u7fa4\u6838\u5fc3\u4ee3\u7801\u4e2d\u7684\u7a0b\u5e8f\uff08\u5c31\u50cf\u4e0a\u9762\u8ba8\u8bba\u7684\u539f\u751f\u7a0b\u5e8f\u4e00\u6837\uff09\u3002"),(0,l.kt)("p",null,"\u5c3d\u7ba1Solana Labs\u7ef4\u62a4\u7740\u8fd9\u4e9b\u94fe\u4e0a\u7a0b\u5e8f\u7684\u4e00\u4e2a\u5c0f\u5b50\u96c6\uff08\u7edf\u79f0\u4e3aSolana\u7a0b\u5e8f\u5e93\uff09\uff0c\u4f46\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u521b\u5efa\u6216\u53d1\u5e03\u5b83\u4eec\u3002\u8fd9\u4e9b\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u7531\u76f8\u5e94\u7a0b\u5e8f\u7684\u8d26\u6237\u6240\u6709\u8005\u76f4\u63a5\u5728\u533a\u5757\u94fe\u4e0a\u8fdb\u884c\u66f4\u65b0\u3002"),(0,l.kt)("h3",{id:"\u53ef\u6267\u884c\u7684"},"\u53ef\u6267\u884c\u7684"),(0,l.kt)("p",null,"\u5f53Solana\u7a0b\u5e8f\u90e8\u7f72\u5230\u7f51\u7edc\u4e0a\u65f6\uff0c\u5b83\u4f1a\u88abBPF Loader\u7a0b\u5e8f\u6807\u8bb0\u4e3a\u201c\u53ef\u6267\u884c\u201d\u3002\u8fd9\u4f7f\u5f97Solana\u8fd0\u884c\u65f6\u80fd\u591f\u9ad8\u6548\u4e14\u6b63\u786e\u5730\u6267\u884c\u7f16\u8bd1\u540e\u7684\u7a0b\u5e8f\u4ee3\u7801\u3002"),(0,l.kt)("h3",{id:"\u53ef\u5347\u7ea7\u7684"},"\u53ef\u5347\u7ea7\u7684"),(0,l.kt)("p",null,"\u4e0e\u5176\u4ed6\u533a\u5757\u94fe\u4e0d\u540c\uff0cSolana\u7684\u7a0b\u5e8f\u5728\u90e8\u7f72\u5230\u7f51\u7edc\u540e\u53ef\u4ee5\u8fdb\u884c\u5347\u7ea7"),(0,l.kt)("p",null,"\u5f53\u65b0\u7684\u8f6f\u4ef6\u53d1\u5e03\u65f6\uff0c\u672c\u5730\u7a0b\u5e8f\u53ea\u80fd\u4f5c\u4e3a\u96c6\u7fa4\u66f4\u65b0\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5347\u7ea7\u3002"),(0,l.kt)("p",null,"\u94fe\u4e0a\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u88ab\u6807\u8bb0\u4e3a\u201c\u5347\u7ea7\u6743\u9650\u201d\u7684\u8d26\u6237\u8fdb\u884c\u5347\u7ea7\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u8d26\u6237/\u5730\u5740\u662f\u6700\u521d\u90e8\u7f72\u8be5\u7a0b\u5e8f\u7684Solana\u8d26\u6237\u3002"),(0,l.kt)("h3",{id:"\u7f16\u5199\u7a0b\u5e8f"},"\u7f16\u5199\u7a0b\u5e8f"),(0,l.kt)("p",null,"\u901a\u5e38\u4f7f\u7528Rust\u6216C++\u6765\u5f00\u53d1\u7a0b\u5e8f\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u9488\u5bf9LLVM\u7684BPF\u540e\u7aef\u7684\u8bed\u8a00\u8fdb\u884c\u5f00\u53d1\u3002\u6700\u8fd1\uff0cNeon Labs\u548cSolang\u63a8\u51fa\u4e86\u4e00\u4e9b\u65b0\u7684\u4e3e\u63aa\uff0c\u4f7f\u5f97EVM\u517c\u5bb9\u6027\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u8005\u4f7f\u7528Solidity\u7f16\u5199\u7a0b\u5e8f\uff08\u5728\u6709\u7528\u94fe\u63a5\u4e2d\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff09\u3002"),(0,l.kt)("p",null,"\u5927\u591a\u6570\u57fa\u4e8eRust\u7684\u7a0b\u5e8f\u9075\u5faa\u4ee5\u4e0b\u67b6\u6784\uff08\u6587\u4ef6 - \u63cf\u8ff0\uff09\ud83d\udc47\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lib.rs")," - \u6ce8\u518c\u6a21\u5757"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"entrypoint.rs")," - \u7a0b\u5e8f\u7684\u5165\u53e3\u70b9"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"instruction.rs")," - \u7a0b\u5e8fAPI\uff0c\uff08\u53cd\uff09\u5e8f\u5217\u5316\u6307\u4ee4\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"processor.rs")," - \u7a0b\u5e8f\u903b\u8f91"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"state.rs")," - \u7a0b\u5e8f\u5bf9\u8c61\uff0c\uff08\u53cd\uff09\u5e8f\u5217\u5316\u72b6\u6001"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"error.rs")," - \u7a0b\u5e8f\u7279\u5b9a\u9519\u8bef")),(0,l.kt)("p",null,"\u5b9e\u9645\u4e0a\uff0c\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"lib.rs"),"\u6a21\u5757\u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u5c06\u7a0b\u5e8f\u62c6\u5206\u4e3a\u4e0a\u8ff0\u6a21\u5757\u662f\u4e00\u4e2a\u597d\u7684\u5b9e\u8df5\ud83e\udd13\u3002"),(0,l.kt)("h2",{id:"\u8de8\u7a0b\u5e8f\u8c03\u7528cpis"},"\u8de8\u7a0b\u5e8f\u8c03\u7528\uff08CPIs\uff09"),(0,l.kt)("h3",{id:"-\u5b9a\u4e49-2"},"\ud83e\udd13 \u5b9a\u4e49"),(0,l.kt)("p",null,"\u8de8\u7a0b\u5e8f\u8c03\u7528\uff08CPI\uff09\u662f\u4e00\u4e2a\u7a0b\u5e8f\u76f4\u63a5\u8c03\u7528\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65b9\u5f0f\u3002\u5c31\u50cf\u4efb\u4f55\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u4f7f\u7528JSON RPC\u8c03\u7528\u4efb\u4f55\u7a0b\u5e8f\u4e00\u6837\uff0c\u4efb\u4f55\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5176\u4ed6\u7a0b\u5e8f\u3002\u4ece\u60a8\u7684\u7a0b\u5e8f\u5185\u90e8\u8c03\u7528\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u7684\u552f\u4e00\u8981\u6c42\u662f\u6b63\u786e\u6784\u9020\u6307\u4ee4\u3002\u60a8\u53ef\u4ee5\u5bf9\u672c\u5730\u7a0b\u5e8f\u3001\u60a8\u521b\u5efa\u7684\u5176\u4ed6\u7a0b\u5e8f\u4ee5\u53ca\u7b2c\u4e09\u65b9\u7a0b\u5e8f\u8fdb\u884cCPI\u8c03\u7528\u3002"),(0,l.kt)("h3",{id:"\u91cd\u70b9-2"},"\ud83d\udccd\u91cd\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8de8\u7a0b\u5e8f\u8c03\u7528\uff08CPI\uff09\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5bf9\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u7684\u8c03\u7528\uff0c\u76ee\u6807\u662f\u8c03\u7528\u7684\u7a0b\u5e8f\u4e0a\u7684\u7279\u5b9a\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},"CPI\u5141\u8bb8\u8c03\u7528\u7a0b\u5e8f\u5c06\u5176\u7b7e\u540d\u8005\u7279\u6743\u6269\u5c55\u5230\u88ab\u8c03\u7528\u7a0b\u5e8f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u6307\u4ee4\u4e2d\u7684",(0,l.kt)("inlineCode",{parentName:"li"},"invoke"),"\u6216",(0,l.kt)("inlineCode",{parentName:"li"},"invoke_signed"),"\u6765\u6267\u884cCPI\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u6240\u6709\u5fc5\u9700\u7684\u7b7e\u540d\u5728\u8c03\u7528\u4e4b\u524d\u90fd\u662f\u53ef\u8bbf\u95ee\u7684\u65f6\uff0c\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"invoke"),"\uff0c\u65e0\u9700PDAs\u5145\u5f53\u7b7e\u7f72\u8005\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u9700\u8981\u8c03\u7528\u7a0b\u5e8f\u7684PDA\u4f5c\u4e3aCPI\u4e2d\u7684\u7b7e\u7f72\u8005\u65f6\uff0c\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"li"},"invoke_signed"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5728\u5c06\u4e00\u4e2aCPI\u53d1\u9001\u7ed9\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u540e\uff0c\u88ab\u8c03\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5411\u5176\u4ed6\u7a0b\u5e8f\u53d1\u8d77\u8fdb\u4e00\u6b65\u7684CPI\uff0c\u6700\u591a\u53ef\u4ee5\u8fbe\u52304\u5c42\u6df1\u5ea6")),(0,l.kt)("h3",{id:"\u5982\u4f55\u5236\u4f5ccpi"},"\u5982\u4f55\u5236\u4f5cCPI"),(0,l.kt)("p",null,"CPIs\u662f\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"solana_program crate"),"\u4e2d\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"invoke"),"\u6216",(0,l.kt)("inlineCode",{parentName:"p"},"invoke_signed"),"\u51fd\u6570\u521b\u5efa\u7684\u3002\u60a8\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"invoke"),"\u51fd\u6570\u6765\u4f20\u9012\u539f\u59cb\u4ea4\u6613\u7b7e\u540d\uff0c\u8be5\u7b7e\u540d\u5df2\u4f20\u9012\u5230\u60a8\u7684\u7a0b\u5e8f\u4e2d\u3002\u60a8\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"invoke_signed"),"\u51fd\u6570\u6765\u8ba9\u60a8\u7684\u7a0b\u5e8f\u4e3a\u5176PDAs\u8fdb\u884c\u201c\u7b7e\u540d\u201d\u3002"),(0,l.kt)("p",null,"\u5728\u521b\u5efa\u4e0d\u9700\u8981\u4efb\u4f55PDA\u4f5c\u4e3a\u7b7e\u540d\u8005\u7684CPI\u65f6\uff0c\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"invoke"),"\u51fd\u6570\u3002\u5728\u521b\u5efaCPI\u65f6\uff0cSolana\u8fd0\u884c\u65f6\u5c06\u539f\u59cb\u7b7e\u540d\u4f20\u9012\u7ed9\u88ab\u8c03\u7528\u7a0b\u5e8f\u3002"),(0,l.kt)("p",null,"\u8c03\u7528\u51fd\u6570\u9700\u89812\u4e2a\u53c2\u6570\ud83d\udc49:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"instruction")," - \u8c03\u7528\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"account_infos")," - \u6839\u636e\u6307\u793a\u6240\u9700\u7684\u8d26\u6237\u3002")),(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(P,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use solana_program::{\n    account_info::{next_account_info, AccountInfo},\n    entrypoint,\n    entrypoint::ProgramResult,\n    msg,\n    program::invoke,\n    program_error::ProgramError,\n    pubkey::Pubkey,\n    rent::Rent,\n    system_instruction::create_account,\n    sysvar::Sysvar,\n};\n\nentrypoint!(process_instruction);\n\n// Accounts required\n/// 1. [signer, writable] Payer Account\n/// 2. [signer, writable] General State Account\n/// 3. [] System Program\npub fn process_instruction(\n    program_id: &Pubkey,\n    accounts: &[AccountInfo],\n    instruction_data: &[u8],\n) -> ProgramResult {\n    let accounts_iter = &mut accounts.iter();\n\n    // Accounts required for token transfer\n\n    // 1. Payer account for the state account creation\n    let payer_account = next_account_info(accounts_iter)?;\n    // 2. Token account we hold\n    let general_state_account = next_account_info(accounts_iter))?;\n    // 3. System Program\n    let system_program = next_account_info(accounts_iter)?;\n\n    msg!(\n        "Creating account for {}",\n        general_state_account.key.to_string()\n    ))\n\n    // Parsing the token transfer amount from instruction data\n    // a. Getting the 0th to 8th index of the u8 byte array\n    // b. Converting the obtained non zero u8 to a proper u8 (as little endian integers)\n    // c. Converting the little endian integers to a u64 number\n    let account_span = instruction_data\n        .get(..8)\n        .and_then(|slice| slice.try_into().ok())\n        .map(u64::from_le_bytes)\n        .ok_or(ProgramError::InvalidAccountData)?;\n\n    let lamports_required = (Rent::get()?).minimum_balance(account_span as usize);\n\n    // Creating a new TransactionInstruction\n     /*\n        Internal representation of the instruction\'s return value (Instruction)\n\n        Instruction::new_with_bincode(\n            system_program::id(), // NOT PASSED FROM USER\n            &SystemInstruction::CreateAccount {\n                lamports,\n                space,\n                owner: *owner,\n            },\n            account_metas,\n        )\n    */\n\n    let create_account_instruction = create_account(\n        &payer_account.key,\n        &general_state_account.key,\n        lamports_required,\n        account_span,\n        program_id,\n    );\n\n    let required_accounts_for_create = [\n        payer_account.clone(),\n        general_state_account.clone(),\n        system_program.clone(),\n    ];\n\n    // Passing the TransactionInstruction to send (with the issused program_id)\n    invoke(&create_account_instruction, &required_accounts_for_create)?;\n\n    msg!("Transfer successful");\n\n    ok(())\n}\n'))),(0,l.kt)(P,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def hello_world():\n  print("Hello, world!")\n'))),(0,l.kt)(P,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n')))),(0,l.kt)("p",null,"\u8981\u521b\u5efa\u4e00\u4e2a\u9700\u8981PDA\u4f5c\u4e3a\u7b7e\u540d\u8005\u7684CPI\uff0c\u8bf7\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"invoke_signed"),"\u51fd\u6570\uff0c\u5e76\u63d0\u4f9b\u5fc5\u8981\u7684\u79cd\u5b50\u6765\u6d3e\u751f\u8c03\u7528\u7a0b\u5e8f\u6240\u9700\u7684PDA\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"invoke_signed"),"\u51fd\u6570\u9700\u89813\u4e2a\u53c2\u6570\ud83d\udc49:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"instruction")," - \u8c03\u7528\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"account_info")," - \u6839\u636e\u6307\u793a\u6240\u9700\u7684\u8d26\u6237\uff0c\u5176\u4e2d\u4e00\u4e2a\u8d26\u6237\u9700\u8981PDA\u4f5c\u4e3a\u7b7e\u7f72\u4eba\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"signers_seeds")," - \u7528\u4e8e\u6d3e\u751fPDA\u7684\u79cd\u5b50\u3002")),(0,l.kt)("p",null,"\u867d\u7136PDA\u672c\u8eab\u6ca1\u6709\u79c1\u94a5\uff0c\u4f46\u5b83\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7CPI\u4f5c\u4e3a\u6307\u4ee4\u7684\u7b7e\u540d\u8005\u3002\u4e3a\u4e86\u9a8c\u8bc1PDA\u662f\u5426\u5c5e\u4e8e\u8c03\u7528\u7a0b\u5e8f\uff0c\u751f\u6210PDA\u6240\u9700\u7684\u79cd\u5b50\u5fc5\u987b\u5305\u542b\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"signers_seeds"),"\u4e2d\u4f5c\u4e3a\u7b7e\u540d\u8005\u3002"),(0,l.kt)("p",null,"Solana\u8fd0\u884c\u65f6\u5c06\u4f7f\u7528\u63d0\u4f9b\u7684\u79cd\u5b50\u548c\u8c03\u7528\u7a0b\u5e8f\u7684\u7a0b\u5e8fID\u5185\u90e8\u8c03\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"create_program_address"),"\u3002\u7136\u540e\u5c06\u751f\u6210\u7684PDA\u4e0e\u6307\u4ee4\u4e2d\u63d0\u4f9b\u7684\u5730\u5740\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u8ba4\u4e3aPDA\u662f\u6709\u6548\u7684\u7b7e\u540d\u8005\u3002"),(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(P,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'use solana_program::{\n  account_info::{next_account_info, AccountInfo},\n  entrypoint,\n  entrypoint::ProgramResult,\n  program::invoke_signed,\n  pubkey::Pubkey,\n  system_instruction,\n  system_program,\n};\n\nentrypoint!(process_instruction);\n\nfn process_instruction(\n  program_id: &Pubkey,\n  accounts: &AccountInfo],\n  instruction_data: &[u8],\n) -> ProgramResult {\n  let account_info_iter = &mut accounts.iter();\n  let payer = next_account_info(account_info_iter)?;\n  let vault_pda = next_account_info(account_info_iter)?;\n  let system_program = next_account_info(account_info_iter)?;\n\n  assert!(payer.is_writable);\n  assert!(payer.is_signer);\n  assert!(vault_pda.is_writable);\n  assert_eq!(vault_pda.owner, &system_program::ID);\n  assert!(system_program::check_id(system_program.key));\n\n  let vault_bump_seed = instruction_data[0];\n  let vault_seeds = &[b"vault", payer.key.as_ref(), &[vault_bump_seed]];\n  let expected_vault_pda = Pubkey::create_program_address(vault_seeds, program_id)?;\n\n  assert_eq!(vault_pda.key, &expected_vault_pda);\n\n  let lamports = 10000000;\n  let vault_size = 16;\n\n  invoke_signed(\n      &system_instruction::create_account(\n          &payer.key,\n          &vault_pda.key,\n          lamports,\n          vault_size,\n          &program_id,\n      ),\n      &[\n          payer.clone(),\n          vault_pda.clone(),\n      ],\n      &[\n          &[\n              b"vault",\n              payer.key.as_ref(),\n              &[vault_bump_seed],\n          ],\n      ]\n  )?;\n  ok(())\n}\n'))),(0,l.kt)(P,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def hello_world():\n  print("Hello, world!")\n'))),(0,l.kt)(P,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n')))),(0,l.kt)("h3",{id:"-\u9700\u8981\u7279\u6743\u7684\u6307\u4ee4"},"\ud83e\uddd0 \u9700\u8981\u7279\u6743\u7684\u6307\u4ee4"),(0,l.kt)("p",null,"\u8fd0\u884c\u65f6\u4f7f\u7528\u8c03\u7528\u7a0b\u5e8f\u88ab\u6388\u4e88\u7684\u7279\u6743\u6765\u786e\u5b9a\u53ef\u4ee5\u6269\u5c55\u7ed9\u88ab\u8c03\u7528\u65b9\u7684\u7279\u6743\u3002\u5728\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4e2d\uff0c\u7279\u6743\u6307\u7684\u662f\u7b7e\u540d\u8005\u548c\u53ef\u5199\u8d26\u6237\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u8c03\u7528\u8005\u6b63\u5728\u5904\u7406\u7684\u6307\u4ee4\u5305\u542b\u4e00\u4e2a\u7b7e\u540d\u8005\u6216\u53ef\u5199\u8d26\u6237\uff0c\u90a3\u4e48\u8c03\u7528\u8005\u53ef\u4ee5\u8c03\u7528\u5305\u542b\u8be5\u7b7e\u540d\u8005\u548c/\u6216\u53ef\u5199\u8d26\u6237\u7684\u6307\u4ee4\u3002"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u7279\u6743\u6269\u5c55\u4f9d\u8d56\u4e8e\u7a0b\u5e8f\u662f\u4e0d\u53ef\u53d8\u7684\u4e8b\u5b9e\uff0c\u9664\u975e\u5728\u7a0b\u5e8f\u5347\u7ea7\u7684\u7279\u6b8a\u60c5\u51b5\u4e0b\u3002"),(0,l.kt)("p",null,"\u5728\u8f6c\u79fb\u4ee4\u724c\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u5b89\u5168\u5730\u5c06\u4ea4\u6613\u7684\u7b7e\u540d\u89c6\u4e3a\u4ee4\u724c\u6307\u4ee4\u7684\u7b7e\u540d\u3002\u5f53\u8fd0\u884c\u65f6\u770b\u5230\u4ee4\u724c\u6307\u4ee4\u5f15\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"alice_pubkey"),"\u65f6\uff0c\u5b83\u4f1a\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"acme"),"\u6307\u4ee4\u4e2d\u67e5\u627e\u8be5\u5bc6\u94a5\uff0c\u4ee5\u67e5\u770b\u8be5\u5bc6\u94a5\u662f\u5426\u5bf9\u5e94\u4e8e\u5df2\u7b7e\u540d\u7684\u8d26\u6237\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u5e76\u4e14\u6388\u6743\u4ee4\u724c\u7a0b\u5e8f\u4fee\u6539Alice\u7684\u8d26\u6237\u3002"),(0,l.kt)("h3",{id:"\u53ef\u91cd\u5165\u6027"},"\u53ef\u91cd\u5165\u6027"),(0,l.kt)("p",null,"\u76ee\u524d\uff0c\u53ef\u91cd\u5165\u6027\u4ec5\u9650\u4e8e\u76f4\u63a5\u81ea\u9012\u5f52\uff0c\u4e14\u53d7\u5230\u56fa\u5b9a\u6df1\u5ea6\u7684\u9650\u5236\u3002\u8fd9\u4e2a\u9650\u5236\u9632\u6b62\u4e86\u7a0b\u5e8f\u5728\u4e2d\u95f4\u72b6\u6001\u4e0b\u8c03\u7528\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u77e5\u9053\u5b83\u53ef\u80fd\u4f1a\u88ab\u518d\u6b21\u8c03\u7528\u7684\u60c5\u51b5\u3002\u76f4\u63a5\u9012\u5f52\u4f7f\u5f97\u7a0b\u5e8f\u5728\u88ab\u518d\u6b21\u8c03\u7528\u65f6\u5b8c\u5168\u638c\u63a7\u5176\u72b6\u6001\u3002"),(0,l.kt)("h2",{id:"-\u6709\u7528\u7684\u94fe\u63a5"},"\ud83d\udd17 \u6709\u7528\u7684\u94fe\u63a5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Solana Program Library \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://spl.solana.com/"},"https://spl.solana.com/"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Example of resizing an account using realloc \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://solanacookbook.com/references/programs.html#how-to-change-account-size"},"https://solanacookbook.com/references/programs.html#how-to-change-account-size"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"LLVM Project \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://llvm.org/"},"https://llvm.org/"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"A Token program on the Solana blockchain \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://spl.solana.com/token"},"https://spl.solana.com/token"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Associated Token Account Program \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://spl.solana.com/associated-token-account"},"https://spl.solana.com/associated-token-account"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Solana Explorer \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://explorer.solana.com/"},"https://explorer.solana.com/"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Documentation of using the solana-rent command \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/cli/usage#solana-rent"},"https://docs.solana.com/cli/usage#solana-rent"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"A couple of words about signing transactions with programs \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/developing/programming-model/calling-between-programs#program-signed-accounts"},"https://docs.solana.com/developing/programming-model/calling-between-programs#program-signed-accounts"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Account Maps \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://solanacookbook.com/guides/account-maps.html"},"https://solanacookbook.com/guides/account-maps.html"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"More about seeds and PDAs \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/solana-program/latest/solana_program/pubkey/struct.Pubkey.html#method.find_program_address"},"https://docs.rs/solana-program/latest/solana_program/pubkey/struct.Pubkey.html#method.find_program_address"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"What a Sealevel is \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://medium.com/solana-labs/sealevel-parallel-processing-thousands-of-smart-contracts-d814b378192"},"https://medium.com/solana-labs/sealevel-parallel-processing-thousands-of-smart-contracts-d814b378192"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Solana Runtime \u2013\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/developing/programming-model/runtime"},"https://docs.solana.com/developing/programming-model/runtime"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"What a BPF and BPF Loader is \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter"},"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"What a BPF and BPF Loader is \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/developing/runtime-facilities/programs#bpf-loader"},"https://docs.solana.com/developing/runtime-facilities/programs#bpf-loader"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"More about Clusters in Solana \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.solana.com/cluster/overview"},"https://docs.solana.com/cluster/overview"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Write programs in Solidity \u2013 ",(0,l.kt)("a",{parentName:"p",href:"https://neon-labs.org/"},"https://neon-labs.org/"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://solang.readthedocs.io/en/latest/"},"https://solang.readthedocs.io/en/latest/"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/evm/"},"https://ethereum.org/en/developers/docs/evm/")))))}R.isMDXComponent=!0},7913:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/Accounts-eab0ec9f0d6b0d9d9307cd044b238910.png"},2986:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/account-rules-215a6ba84341c2278d6ca0956097202d.png"},890:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/on-chain-account-data-5de5104ee4afc1ff68f9704160fa1958.png"},5878:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/solana-account-types-bbda76a50988433f9c02dc77fe853a47.png"}}]);